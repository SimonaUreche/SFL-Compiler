State 62 conflicts: 14 shift/reduce
State 63 conflicts: 14 shift/reduce


Grammar

    0 $accept: file_content $end

    1 file_content: ε
    2             | file_elements
    3             | main_block
    4             | file_elements main_block

    5 file_elements: file_element
    6              | file_element file_elements

    7 $@1: ε

    8 main_block: T_MAIN T_OBRACE $@1 instructions T_CBRACE

    9 file_element: include_directive
   10             | function_declaration
   11             | instruction T_NEWLINE
   12             | T_NEWLINE

   13 instructions: instruction
   14             | instruction T_NEWLINE instructions
   15             | T_NEWLINE instructions

   16 instruction: declaration T_SEMICOLON
   17            | expr T_SEMICOLON
   18            | T_PRINT expr T_SEMICOLON
   19            | T_RETURN expr T_SEMICOLON

   20 $@2: ε

   21 $@3: ε

   22 instruction: T_IF expr T_THEN T_OBRACE $@2 instructions T_CBRACE opt_newlines T_ELSE T_OBRACE $@3 instructions T_CBRACE

   23 opt_newlines: ε
   24             | T_NEWLINE opt_newlines

   25 declaration: T_LET IDENTIFIER T_COLON type T_ASSIGN expr
   26            | T_MUT IDENTIFIER T_COLON type T_ASSIGN expr

   27 type: T_INT
   28     | T_FLOAT
   29     | T_DOUBLE
   30     | T_BOOL
   31     | T_STRING

   32 expr: DIGIT
   33     | FLOAT_LITERAL
   34     | IDENTIFIER
   35     | IDENTIFIER T_ASSIGN expr
   36     | IDENTIFIER T_OPAREN expr_list T_CPAREN
   37     | expr T_PLUS expr
   38     | expr T_MINUS expr
   39     | expr T_MUL expr
   40     | expr T_DIV expr
   41     | expr T_MOD expr
   42     | expr T_POW expr
   43     | expr T_GT expr
   44     | expr T_LT expr
   45     | expr T_GTE expr
   46     | expr T_LTE expr
   47     | expr T_EQ expr
   48     | expr T_NEQ expr
   49     | expr T_AND expr
   50     | expr T_OR expr
   51     | T_NOT expr
   52     | T_MINUS expr
   53     | T_OPAREN expr T_CPAREN
   54     | STRING_LITERAL
   55     | IDENTIFIER T_LAMBDA expr

   56 expr_list: ε
   57          | expr
   58          | expr T_COMMA expr_list

   59 function_declaration: T_FUNC IDENTIFIER T_OPAREN param_list T_CPAREN T_COLON type T_OBRACE function_body T_CBRACE

   60 param_list: ε
   61           | param
   62           | param T_COMMA param_list

   63 param: IDENTIFIER T_COLON type

   64 function_body: instructions

   65 include_directive: T_INCLUDE IDENTIFIER T_NEWLINE


Terminals, with rules where they appear

    $end (0) 0
    error (256)
    T_NEWLINE (258) 11 12 14 15 24 65
    DIGIT <integer> (259) 32
    IDENTIFIER <str> (260) 25 26 34 35 36 55 59 63 65
    STRING_LITERAL <str> (261) 54
    FLOAT_LITERAL <str> (262) 33
    T_OBRACE (263) 8 22 59
    T_CBRACE (264) 8 22 59
    T_OPAREN (265) 36 53 59
    T_CPAREN (266) 36 53 59
    T_EQ (267) 47
    T_ASSIGN (268) 25 26 35
    T_SEMICOLON (269) 16 17 18 19
    T_INT (270) 27
    T_FLOAT (271) 28
    T_DOUBLE (272) 29
    T_BOOL (273) 30
    T_STRING (274) 31
    T_LET (275) 25
    T_PRINT (276) 18
    T_RETURN (277) 19
    T_IF (278) 22
    T_THEN (279) 22
    T_ELSE (280) 22
    T_NEQ (281) 48
    T_GTE (282) 45
    T_LTE (283) 46
    T_GT (284) 43
    T_LT (285) 44
    T_AND (286) 49
    T_OR (287) 50
    T_NOT (288) 51
    T_LAMBDA (289) 55
    T_FUNC (290) 59
    T_INCLUDE (291) 65
    T_MAIN (292) 8
    T_MUT (293) 26
    T_COMMA (294) 58 62
    T_COLON (295) 25 26 59 63
    T_PLUS (296) 37
    T_MINUS (297) 38 52
    T_MUL (298) 39
    T_DIV (299) 40
    T_MOD (300) 41
    T_POW (301) 42
    UMINUS (302)


Nonterminals, with rules where they appear

    $accept (48)
        on left: 0
    file_content (49)
        on left: 1 2 3 4
        on right: 0
    file_elements (50)
        on left: 5 6
        on right: 2 4 6
    main_block (51)
        on left: 8
        on right: 3 4
    $@1 (52)
        on left: 7
        on right: 8
    file_element (53)
        on left: 9 10 11 12
        on right: 5 6
    instructions <instr> (54)
        on left: 13 14 15
        on right: 8 14 15 22 64
    instruction <instr> (55)
        on left: 16 17 18 19 22
        on right: 11 13 14
    $@2 (56)
        on left: 20
        on right: 22
    $@3 (57)
        on left: 21
        on right: 22
    opt_newlines (58)
        on left: 23 24
        on right: 22 24
    declaration <decl> (59)
        on left: 25 26
        on right: 16
    type <str> (60)
        on left: 27 28 29 30 31
        on right: 25 26 59 63
    expr <expressionNode> (61)
        on left: 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52 53 54 55
        on right: 17 18 19 22 25 26 35 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52 53 55 57 58
    expr_list <expressionNode> (62)
        on left: 56 57 58
        on right: 36 58
    function_declaration <function> (63)
        on left: 59
        on right: 10
    param_list <param> (64)
        on left: 60 61 62
        on right: 59 62
    param <param> (65)
        on left: 63
        on right: 61 62
    function_body <instr> (66)
        on left: 64
        on right: 59
    include_directive <str> (67)
        on left: 65
        on right: 9


State 0

    0 $accept: • file_content $end

    T_NEWLINE       shift, and go to state 1
    DIGIT           shift, and go to state 2
    IDENTIFIER      shift, and go to state 3
    STRING_LITERAL  shift, and go to state 4
    FLOAT_LITERAL   shift, and go to state 5
    T_OPAREN        shift, and go to state 6
    T_LET           shift, and go to state 7
    T_PRINT         shift, and go to state 8
    T_RETURN        shift, and go to state 9
    T_IF            shift, and go to state 10
    T_NOT           shift, and go to state 11
    T_FUNC          shift, and go to state 12
    T_INCLUDE       shift, and go to state 13
    T_MAIN          shift, and go to state 14
    T_MUT           shift, and go to state 15
    T_MINUS         shift, and go to state 16

    $default  reduce using rule 1 (file_content)

    file_content          go to state 17
    file_elements         go to state 18
    main_block            go to state 19
    file_element          go to state 20
    instruction           go to state 21
    declaration           go to state 22
    expr                  go to state 23
    function_declaration  go to state 24
    include_directive     go to state 25


State 1

   12 file_element: T_NEWLINE •

    $default  reduce using rule 12 (file_element)


State 2

   32 expr: DIGIT •

    $default  reduce using rule 32 (expr)


State 3

   34 expr: IDENTIFIER •
   35     | IDENTIFIER • T_ASSIGN expr
   36     | IDENTIFIER • T_OPAREN expr_list T_CPAREN
   55     | IDENTIFIER • T_LAMBDA expr

    T_OPAREN  shift, and go to state 26
    T_ASSIGN  shift, and go to state 27
    T_LAMBDA  shift, and go to state 28

    $default  reduce using rule 34 (expr)


State 4

   54 expr: STRING_LITERAL •

    $default  reduce using rule 54 (expr)


State 5

   33 expr: FLOAT_LITERAL •

    $default  reduce using rule 33 (expr)


State 6

   53 expr: T_OPAREN • expr T_CPAREN

    DIGIT           shift, and go to state 2
    IDENTIFIER      shift, and go to state 3
    STRING_LITERAL  shift, and go to state 4
    FLOAT_LITERAL   shift, and go to state 5
    T_OPAREN        shift, and go to state 6
    T_NOT           shift, and go to state 11
    T_MINUS         shift, and go to state 16

    expr  go to state 29


State 7

   25 declaration: T_LET • IDENTIFIER T_COLON type T_ASSIGN expr

    IDENTIFIER  shift, and go to state 30


State 8

   18 instruction: T_PRINT • expr T_SEMICOLON

    DIGIT           shift, and go to state 2
    IDENTIFIER      shift, and go to state 3
    STRING_LITERAL  shift, and go to state 4
    FLOAT_LITERAL   shift, and go to state 5
    T_OPAREN        shift, and go to state 6
    T_NOT           shift, and go to state 11
    T_MINUS         shift, and go to state 16

    expr  go to state 31


State 9

   19 instruction: T_RETURN • expr T_SEMICOLON

    DIGIT           shift, and go to state 2
    IDENTIFIER      shift, and go to state 3
    STRING_LITERAL  shift, and go to state 4
    FLOAT_LITERAL   shift, and go to state 5
    T_OPAREN        shift, and go to state 6
    T_NOT           shift, and go to state 11
    T_MINUS         shift, and go to state 16

    expr  go to state 32


State 10

   22 instruction: T_IF • expr T_THEN T_OBRACE $@2 instructions T_CBRACE opt_newlines T_ELSE T_OBRACE $@3 instructions T_CBRACE

    DIGIT           shift, and go to state 2
    IDENTIFIER      shift, and go to state 3
    STRING_LITERAL  shift, and go to state 4
    FLOAT_LITERAL   shift, and go to state 5
    T_OPAREN        shift, and go to state 6
    T_NOT           shift, and go to state 11
    T_MINUS         shift, and go to state 16

    expr  go to state 33


State 11

   51 expr: T_NOT • expr

    DIGIT           shift, and go to state 2
    IDENTIFIER      shift, and go to state 3
    STRING_LITERAL  shift, and go to state 4
    FLOAT_LITERAL   shift, and go to state 5
    T_OPAREN        shift, and go to state 6
    T_NOT           shift, and go to state 11
    T_MINUS         shift, and go to state 16

    expr  go to state 34


State 12

   59 function_declaration: T_FUNC • IDENTIFIER T_OPAREN param_list T_CPAREN T_COLON type T_OBRACE function_body T_CBRACE

    IDENTIFIER  shift, and go to state 35


State 13

   65 include_directive: T_INCLUDE • IDENTIFIER T_NEWLINE

    IDENTIFIER  shift, and go to state 36


State 14

    8 main_block: T_MAIN • T_OBRACE $@1 instructions T_CBRACE

    T_OBRACE  shift, and go to state 37


State 15

   26 declaration: T_MUT • IDENTIFIER T_COLON type T_ASSIGN expr

    IDENTIFIER  shift, and go to state 38


State 16

   52 expr: T_MINUS • expr

    DIGIT           shift, and go to state 2
    IDENTIFIER      shift, and go to state 3
    STRING_LITERAL  shift, and go to state 4
    FLOAT_LITERAL   shift, and go to state 5
    T_OPAREN        shift, and go to state 6
    T_NOT           shift, and go to state 11
    T_MINUS         shift, and go to state 16

    expr  go to state 39


State 17

    0 $accept: file_content • $end

    $end  shift, and go to state 40


State 18

    2 file_content: file_elements •
    4             | file_elements • main_block

    T_MAIN  shift, and go to state 14

    $default  reduce using rule 2 (file_content)

    main_block  go to state 41


State 19

    3 file_content: main_block •

    $default  reduce using rule 3 (file_content)


State 20

    5 file_elements: file_element •
    6              | file_element • file_elements

    T_NEWLINE       shift, and go to state 1
    DIGIT           shift, and go to state 2
    IDENTIFIER      shift, and go to state 3
    STRING_LITERAL  shift, and go to state 4
    FLOAT_LITERAL   shift, and go to state 5
    T_OPAREN        shift, and go to state 6
    T_LET           shift, and go to state 7
    T_PRINT         shift, and go to state 8
    T_RETURN        shift, and go to state 9
    T_IF            shift, and go to state 10
    T_NOT           shift, and go to state 11
    T_FUNC          shift, and go to state 12
    T_INCLUDE       shift, and go to state 13
    T_MUT           shift, and go to state 15
    T_MINUS         shift, and go to state 16

    $default  reduce using rule 5 (file_elements)

    file_elements         go to state 42
    file_element          go to state 20
    instruction           go to state 21
    declaration           go to state 22
    expr                  go to state 23
    function_declaration  go to state 24
    include_directive     go to state 25


State 21

   11 file_element: instruction • T_NEWLINE

    T_NEWLINE  shift, and go to state 43


State 22

   16 instruction: declaration • T_SEMICOLON

    T_SEMICOLON  shift, and go to state 44


State 23

   17 instruction: expr • T_SEMICOLON
   37 expr: expr • T_PLUS expr
   38     | expr • T_MINUS expr
   39     | expr • T_MUL expr
   40     | expr • T_DIV expr
   41     | expr • T_MOD expr
   42     | expr • T_POW expr
   43     | expr • T_GT expr
   44     | expr • T_LT expr
   45     | expr • T_GTE expr
   46     | expr • T_LTE expr
   47     | expr • T_EQ expr
   48     | expr • T_NEQ expr
   49     | expr • T_AND expr
   50     | expr • T_OR expr

    T_EQ         shift, and go to state 45
    T_SEMICOLON  shift, and go to state 46
    T_NEQ        shift, and go to state 47
    T_GTE        shift, and go to state 48
    T_LTE        shift, and go to state 49
    T_GT         shift, and go to state 50
    T_LT         shift, and go to state 51
    T_AND        shift, and go to state 52
    T_OR         shift, and go to state 53
    T_PLUS       shift, and go to state 54
    T_MINUS      shift, and go to state 55
    T_MUL        shift, and go to state 56
    T_DIV        shift, and go to state 57
    T_MOD        shift, and go to state 58
    T_POW        shift, and go to state 59


State 24

   10 file_element: function_declaration •

    $default  reduce using rule 10 (file_element)


State 25

    9 file_element: include_directive •

    $default  reduce using rule 9 (file_element)


State 26

   36 expr: IDENTIFIER T_OPAREN • expr_list T_CPAREN

    DIGIT           shift, and go to state 2
    IDENTIFIER      shift, and go to state 3
    STRING_LITERAL  shift, and go to state 4
    FLOAT_LITERAL   shift, and go to state 5
    T_OPAREN        shift, and go to state 6
    T_NOT           shift, and go to state 11
    T_MINUS         shift, and go to state 16

    $default  reduce using rule 56 (expr_list)

    expr       go to state 60
    expr_list  go to state 61


State 27

   35 expr: IDENTIFIER T_ASSIGN • expr

    DIGIT           shift, and go to state 2
    IDENTIFIER      shift, and go to state 3
    STRING_LITERAL  shift, and go to state 4
    FLOAT_LITERAL   shift, and go to state 5
    T_OPAREN        shift, and go to state 6
    T_NOT           shift, and go to state 11
    T_MINUS         shift, and go to state 16

    expr  go to state 62


State 28

   55 expr: IDENTIFIER T_LAMBDA • expr

    DIGIT           shift, and go to state 2
    IDENTIFIER      shift, and go to state 3
    STRING_LITERAL  shift, and go to state 4
    FLOAT_LITERAL   shift, and go to state 5
    T_OPAREN        shift, and go to state 6
    T_NOT           shift, and go to state 11
    T_MINUS         shift, and go to state 16

    expr  go to state 63


State 29

   37 expr: expr • T_PLUS expr
   38     | expr • T_MINUS expr
   39     | expr • T_MUL expr
   40     | expr • T_DIV expr
   41     | expr • T_MOD expr
   42     | expr • T_POW expr
   43     | expr • T_GT expr
   44     | expr • T_LT expr
   45     | expr • T_GTE expr
   46     | expr • T_LTE expr
   47     | expr • T_EQ expr
   48     | expr • T_NEQ expr
   49     | expr • T_AND expr
   50     | expr • T_OR expr
   53     | T_OPAREN expr • T_CPAREN

    T_CPAREN  shift, and go to state 64
    T_EQ      shift, and go to state 45
    T_NEQ     shift, and go to state 47
    T_GTE     shift, and go to state 48
    T_LTE     shift, and go to state 49
    T_GT      shift, and go to state 50
    T_LT      shift, and go to state 51
    T_AND     shift, and go to state 52
    T_OR      shift, and go to state 53
    T_PLUS    shift, and go to state 54
    T_MINUS   shift, and go to state 55
    T_MUL     shift, and go to state 56
    T_DIV     shift, and go to state 57
    T_MOD     shift, and go to state 58
    T_POW     shift, and go to state 59


State 30

   25 declaration: T_LET IDENTIFIER • T_COLON type T_ASSIGN expr

    T_COLON  shift, and go to state 65


State 31

   18 instruction: T_PRINT expr • T_SEMICOLON
   37 expr: expr • T_PLUS expr
   38     | expr • T_MINUS expr
   39     | expr • T_MUL expr
   40     | expr • T_DIV expr
   41     | expr • T_MOD expr
   42     | expr • T_POW expr
   43     | expr • T_GT expr
   44     | expr • T_LT expr
   45     | expr • T_GTE expr
   46     | expr • T_LTE expr
   47     | expr • T_EQ expr
   48     | expr • T_NEQ expr
   49     | expr • T_AND expr
   50     | expr • T_OR expr

    T_EQ         shift, and go to state 45
    T_SEMICOLON  shift, and go to state 66
    T_NEQ        shift, and go to state 47
    T_GTE        shift, and go to state 48
    T_LTE        shift, and go to state 49
    T_GT         shift, and go to state 50
    T_LT         shift, and go to state 51
    T_AND        shift, and go to state 52
    T_OR         shift, and go to state 53
    T_PLUS       shift, and go to state 54
    T_MINUS      shift, and go to state 55
    T_MUL        shift, and go to state 56
    T_DIV        shift, and go to state 57
    T_MOD        shift, and go to state 58
    T_POW        shift, and go to state 59


State 32

   19 instruction: T_RETURN expr • T_SEMICOLON
   37 expr: expr • T_PLUS expr
   38     | expr • T_MINUS expr
   39     | expr • T_MUL expr
   40     | expr • T_DIV expr
   41     | expr • T_MOD expr
   42     | expr • T_POW expr
   43     | expr • T_GT expr
   44     | expr • T_LT expr
   45     | expr • T_GTE expr
   46     | expr • T_LTE expr
   47     | expr • T_EQ expr
   48     | expr • T_NEQ expr
   49     | expr • T_AND expr
   50     | expr • T_OR expr

    T_EQ         shift, and go to state 45
    T_SEMICOLON  shift, and go to state 67
    T_NEQ        shift, and go to state 47
    T_GTE        shift, and go to state 48
    T_LTE        shift, and go to state 49
    T_GT         shift, and go to state 50
    T_LT         shift, and go to state 51
    T_AND        shift, and go to state 52
    T_OR         shift, and go to state 53
    T_PLUS       shift, and go to state 54
    T_MINUS      shift, and go to state 55
    T_MUL        shift, and go to state 56
    T_DIV        shift, and go to state 57
    T_MOD        shift, and go to state 58
    T_POW        shift, and go to state 59


State 33

   22 instruction: T_IF expr • T_THEN T_OBRACE $@2 instructions T_CBRACE opt_newlines T_ELSE T_OBRACE $@3 instructions T_CBRACE
   37 expr: expr • T_PLUS expr
   38     | expr • T_MINUS expr
   39     | expr • T_MUL expr
   40     | expr • T_DIV expr
   41     | expr • T_MOD expr
   42     | expr • T_POW expr
   43     | expr • T_GT expr
   44     | expr • T_LT expr
   45     | expr • T_GTE expr
   46     | expr • T_LTE expr
   47     | expr • T_EQ expr
   48     | expr • T_NEQ expr
   49     | expr • T_AND expr
   50     | expr • T_OR expr

    T_EQ     shift, and go to state 45
    T_THEN   shift, and go to state 68
    T_NEQ    shift, and go to state 47
    T_GTE    shift, and go to state 48
    T_LTE    shift, and go to state 49
    T_GT     shift, and go to state 50
    T_LT     shift, and go to state 51
    T_AND    shift, and go to state 52
    T_OR     shift, and go to state 53
    T_PLUS   shift, and go to state 54
    T_MINUS  shift, and go to state 55
    T_MUL    shift, and go to state 56
    T_DIV    shift, and go to state 57
    T_MOD    shift, and go to state 58
    T_POW    shift, and go to state 59


State 34

   37 expr: expr • T_PLUS expr
   38     | expr • T_MINUS expr
   39     | expr • T_MUL expr
   40     | expr • T_DIV expr
   41     | expr • T_MOD expr
   42     | expr • T_POW expr
   43     | expr • T_GT expr
   44     | expr • T_LT expr
   45     | expr • T_GTE expr
   46     | expr • T_LTE expr
   47     | expr • T_EQ expr
   48     | expr • T_NEQ expr
   49     | expr • T_AND expr
   50     | expr • T_OR expr
   51     | T_NOT expr •

    $default  reduce using rule 51 (expr)


State 35

   59 function_declaration: T_FUNC IDENTIFIER • T_OPAREN param_list T_CPAREN T_COLON type T_OBRACE function_body T_CBRACE

    T_OPAREN  shift, and go to state 69


State 36

   65 include_directive: T_INCLUDE IDENTIFIER • T_NEWLINE

    T_NEWLINE  shift, and go to state 70


State 37

    8 main_block: T_MAIN T_OBRACE • $@1 instructions T_CBRACE

    $default  reduce using rule 7 ($@1)

    $@1  go to state 71


State 38

   26 declaration: T_MUT IDENTIFIER • T_COLON type T_ASSIGN expr

    T_COLON  shift, and go to state 72


State 39

   37 expr: expr • T_PLUS expr
   38     | expr • T_MINUS expr
   39     | expr • T_MUL expr
   40     | expr • T_DIV expr
   41     | expr • T_MOD expr
   42     | expr • T_POW expr
   43     | expr • T_GT expr
   44     | expr • T_LT expr
   45     | expr • T_GTE expr
   46     | expr • T_LTE expr
   47     | expr • T_EQ expr
   48     | expr • T_NEQ expr
   49     | expr • T_AND expr
   50     | expr • T_OR expr
   52     | T_MINUS expr •

    $default  reduce using rule 52 (expr)


State 40

    0 $accept: file_content $end •

    $default  accept


State 41

    4 file_content: file_elements main_block •

    $default  reduce using rule 4 (file_content)


State 42

    6 file_elements: file_element file_elements •

    $default  reduce using rule 6 (file_elements)


State 43

   11 file_element: instruction T_NEWLINE •

    $default  reduce using rule 11 (file_element)


State 44

   16 instruction: declaration T_SEMICOLON •

    $default  reduce using rule 16 (instruction)


State 45

   47 expr: expr T_EQ • expr

    DIGIT           shift, and go to state 2
    IDENTIFIER      shift, and go to state 3
    STRING_LITERAL  shift, and go to state 4
    FLOAT_LITERAL   shift, and go to state 5
    T_OPAREN        shift, and go to state 6
    T_NOT           shift, and go to state 11
    T_MINUS         shift, and go to state 16

    expr  go to state 73


State 46

   17 instruction: expr T_SEMICOLON •

    $default  reduce using rule 17 (instruction)


State 47

   48 expr: expr T_NEQ • expr

    DIGIT           shift, and go to state 2
    IDENTIFIER      shift, and go to state 3
    STRING_LITERAL  shift, and go to state 4
    FLOAT_LITERAL   shift, and go to state 5
    T_OPAREN        shift, and go to state 6
    T_NOT           shift, and go to state 11
    T_MINUS         shift, and go to state 16

    expr  go to state 74


State 48

   45 expr: expr T_GTE • expr

    DIGIT           shift, and go to state 2
    IDENTIFIER      shift, and go to state 3
    STRING_LITERAL  shift, and go to state 4
    FLOAT_LITERAL   shift, and go to state 5
    T_OPAREN        shift, and go to state 6
    T_NOT           shift, and go to state 11
    T_MINUS         shift, and go to state 16

    expr  go to state 75


State 49

   46 expr: expr T_LTE • expr

    DIGIT           shift, and go to state 2
    IDENTIFIER      shift, and go to state 3
    STRING_LITERAL  shift, and go to state 4
    FLOAT_LITERAL   shift, and go to state 5
    T_OPAREN        shift, and go to state 6
    T_NOT           shift, and go to state 11
    T_MINUS         shift, and go to state 16

    expr  go to state 76


State 50

   43 expr: expr T_GT • expr

    DIGIT           shift, and go to state 2
    IDENTIFIER      shift, and go to state 3
    STRING_LITERAL  shift, and go to state 4
    FLOAT_LITERAL   shift, and go to state 5
    T_OPAREN        shift, and go to state 6
    T_NOT           shift, and go to state 11
    T_MINUS         shift, and go to state 16

    expr  go to state 77


State 51

   44 expr: expr T_LT • expr

    DIGIT           shift, and go to state 2
    IDENTIFIER      shift, and go to state 3
    STRING_LITERAL  shift, and go to state 4
    FLOAT_LITERAL   shift, and go to state 5
    T_OPAREN        shift, and go to state 6
    T_NOT           shift, and go to state 11
    T_MINUS         shift, and go to state 16

    expr  go to state 78


State 52

   49 expr: expr T_AND • expr

    DIGIT           shift, and go to state 2
    IDENTIFIER      shift, and go to state 3
    STRING_LITERAL  shift, and go to state 4
    FLOAT_LITERAL   shift, and go to state 5
    T_OPAREN        shift, and go to state 6
    T_NOT           shift, and go to state 11
    T_MINUS         shift, and go to state 16

    expr  go to state 79


State 53

   50 expr: expr T_OR • expr

    DIGIT           shift, and go to state 2
    IDENTIFIER      shift, and go to state 3
    STRING_LITERAL  shift, and go to state 4
    FLOAT_LITERAL   shift, and go to state 5
    T_OPAREN        shift, and go to state 6
    T_NOT           shift, and go to state 11
    T_MINUS         shift, and go to state 16

    expr  go to state 80


State 54

   37 expr: expr T_PLUS • expr

    DIGIT           shift, and go to state 2
    IDENTIFIER      shift, and go to state 3
    STRING_LITERAL  shift, and go to state 4
    FLOAT_LITERAL   shift, and go to state 5
    T_OPAREN        shift, and go to state 6
    T_NOT           shift, and go to state 11
    T_MINUS         shift, and go to state 16

    expr  go to state 81


State 55

   38 expr: expr T_MINUS • expr

    DIGIT           shift, and go to state 2
    IDENTIFIER      shift, and go to state 3
    STRING_LITERAL  shift, and go to state 4
    FLOAT_LITERAL   shift, and go to state 5
    T_OPAREN        shift, and go to state 6
    T_NOT           shift, and go to state 11
    T_MINUS         shift, and go to state 16

    expr  go to state 82


State 56

   39 expr: expr T_MUL • expr

    DIGIT           shift, and go to state 2
    IDENTIFIER      shift, and go to state 3
    STRING_LITERAL  shift, and go to state 4
    FLOAT_LITERAL   shift, and go to state 5
    T_OPAREN        shift, and go to state 6
    T_NOT           shift, and go to state 11
    T_MINUS         shift, and go to state 16

    expr  go to state 83


State 57

   40 expr: expr T_DIV • expr

    DIGIT           shift, and go to state 2
    IDENTIFIER      shift, and go to state 3
    STRING_LITERAL  shift, and go to state 4
    FLOAT_LITERAL   shift, and go to state 5
    T_OPAREN        shift, and go to state 6
    T_NOT           shift, and go to state 11
    T_MINUS         shift, and go to state 16

    expr  go to state 84


State 58

   41 expr: expr T_MOD • expr

    DIGIT           shift, and go to state 2
    IDENTIFIER      shift, and go to state 3
    STRING_LITERAL  shift, and go to state 4
    FLOAT_LITERAL   shift, and go to state 5
    T_OPAREN        shift, and go to state 6
    T_NOT           shift, and go to state 11
    T_MINUS         shift, and go to state 16

    expr  go to state 85


State 59

   42 expr: expr T_POW • expr

    DIGIT           shift, and go to state 2
    IDENTIFIER      shift, and go to state 3
    STRING_LITERAL  shift, and go to state 4
    FLOAT_LITERAL   shift, and go to state 5
    T_OPAREN        shift, and go to state 6
    T_NOT           shift, and go to state 11
    T_MINUS         shift, and go to state 16

    expr  go to state 86


State 60

   37 expr: expr • T_PLUS expr
   38     | expr • T_MINUS expr
   39     | expr • T_MUL expr
   40     | expr • T_DIV expr
   41     | expr • T_MOD expr
   42     | expr • T_POW expr
   43     | expr • T_GT expr
   44     | expr • T_LT expr
   45     | expr • T_GTE expr
   46     | expr • T_LTE expr
   47     | expr • T_EQ expr
   48     | expr • T_NEQ expr
   49     | expr • T_AND expr
   50     | expr • T_OR expr
   57 expr_list: expr •
   58          | expr • T_COMMA expr_list

    T_EQ     shift, and go to state 45
    T_NEQ    shift, and go to state 47
    T_GTE    shift, and go to state 48
    T_LTE    shift, and go to state 49
    T_GT     shift, and go to state 50
    T_LT     shift, and go to state 51
    T_AND    shift, and go to state 52
    T_OR     shift, and go to state 53
    T_COMMA  shift, and go to state 87
    T_PLUS   shift, and go to state 54
    T_MINUS  shift, and go to state 55
    T_MUL    shift, and go to state 56
    T_DIV    shift, and go to state 57
    T_MOD    shift, and go to state 58
    T_POW    shift, and go to state 59

    $default  reduce using rule 57 (expr_list)


State 61

   36 expr: IDENTIFIER T_OPAREN expr_list • T_CPAREN

    T_CPAREN  shift, and go to state 88


State 62

   35 expr: IDENTIFIER T_ASSIGN expr •
   37     | expr • T_PLUS expr
   38     | expr • T_MINUS expr
   39     | expr • T_MUL expr
   40     | expr • T_DIV expr
   41     | expr • T_MOD expr
   42     | expr • T_POW expr
   43     | expr • T_GT expr
   44     | expr • T_LT expr
   45     | expr • T_GTE expr
   46     | expr • T_LTE expr
   47     | expr • T_EQ expr
   48     | expr • T_NEQ expr
   49     | expr • T_AND expr
   50     | expr • T_OR expr

    T_EQ     shift, and go to state 45
    T_NEQ    shift, and go to state 47
    T_GTE    shift, and go to state 48
    T_LTE    shift, and go to state 49
    T_GT     shift, and go to state 50
    T_LT     shift, and go to state 51
    T_AND    shift, and go to state 52
    T_OR     shift, and go to state 53
    T_PLUS   shift, and go to state 54
    T_MINUS  shift, and go to state 55
    T_MUL    shift, and go to state 56
    T_DIV    shift, and go to state 57
    T_MOD    shift, and go to state 58
    T_POW    shift, and go to state 59

    T_EQ      [reduce using rule 35 (expr)]
    T_NEQ     [reduce using rule 35 (expr)]
    T_GTE     [reduce using rule 35 (expr)]
    T_LTE     [reduce using rule 35 (expr)]
    T_GT      [reduce using rule 35 (expr)]
    T_LT      [reduce using rule 35 (expr)]
    T_AND     [reduce using rule 35 (expr)]
    T_OR      [reduce using rule 35 (expr)]
    T_PLUS    [reduce using rule 35 (expr)]
    T_MINUS   [reduce using rule 35 (expr)]
    T_MUL     [reduce using rule 35 (expr)]
    T_DIV     [reduce using rule 35 (expr)]
    T_MOD     [reduce using rule 35 (expr)]
    T_POW     [reduce using rule 35 (expr)]
    $default  reduce using rule 35 (expr)


State 63

   37 expr: expr • T_PLUS expr
   38     | expr • T_MINUS expr
   39     | expr • T_MUL expr
   40     | expr • T_DIV expr
   41     | expr • T_MOD expr
   42     | expr • T_POW expr
   43     | expr • T_GT expr
   44     | expr • T_LT expr
   45     | expr • T_GTE expr
   46     | expr • T_LTE expr
   47     | expr • T_EQ expr
   48     | expr • T_NEQ expr
   49     | expr • T_AND expr
   50     | expr • T_OR expr
   55     | IDENTIFIER T_LAMBDA expr •

    T_EQ     shift, and go to state 45
    T_NEQ    shift, and go to state 47
    T_GTE    shift, and go to state 48
    T_LTE    shift, and go to state 49
    T_GT     shift, and go to state 50
    T_LT     shift, and go to state 51
    T_AND    shift, and go to state 52
    T_OR     shift, and go to state 53
    T_PLUS   shift, and go to state 54
    T_MINUS  shift, and go to state 55
    T_MUL    shift, and go to state 56
    T_DIV    shift, and go to state 57
    T_MOD    shift, and go to state 58
    T_POW    shift, and go to state 59

    T_EQ      [reduce using rule 55 (expr)]
    T_NEQ     [reduce using rule 55 (expr)]
    T_GTE     [reduce using rule 55 (expr)]
    T_LTE     [reduce using rule 55 (expr)]
    T_GT      [reduce using rule 55 (expr)]
    T_LT      [reduce using rule 55 (expr)]
    T_AND     [reduce using rule 55 (expr)]
    T_OR      [reduce using rule 55 (expr)]
    T_PLUS    [reduce using rule 55 (expr)]
    T_MINUS   [reduce using rule 55 (expr)]
    T_MUL     [reduce using rule 55 (expr)]
    T_DIV     [reduce using rule 55 (expr)]
    T_MOD     [reduce using rule 55 (expr)]
    T_POW     [reduce using rule 55 (expr)]
    $default  reduce using rule 55 (expr)


State 64

   53 expr: T_OPAREN expr T_CPAREN •

    $default  reduce using rule 53 (expr)


State 65

   25 declaration: T_LET IDENTIFIER T_COLON • type T_ASSIGN expr

    T_INT     shift, and go to state 89
    T_FLOAT   shift, and go to state 90
    T_DOUBLE  shift, and go to state 91
    T_BOOL    shift, and go to state 92
    T_STRING  shift, and go to state 93

    type  go to state 94


State 66

   18 instruction: T_PRINT expr T_SEMICOLON •

    $default  reduce using rule 18 (instruction)


State 67

   19 instruction: T_RETURN expr T_SEMICOLON •

    $default  reduce using rule 19 (instruction)


State 68

   22 instruction: T_IF expr T_THEN • T_OBRACE $@2 instructions T_CBRACE opt_newlines T_ELSE T_OBRACE $@3 instructions T_CBRACE

    T_OBRACE  shift, and go to state 95


State 69

   59 function_declaration: T_FUNC IDENTIFIER T_OPAREN • param_list T_CPAREN T_COLON type T_OBRACE function_body T_CBRACE

    IDENTIFIER  shift, and go to state 96

    $default  reduce using rule 60 (param_list)

    param_list  go to state 97
    param       go to state 98


State 70

   65 include_directive: T_INCLUDE IDENTIFIER T_NEWLINE •

    $default  reduce using rule 65 (include_directive)


State 71

    8 main_block: T_MAIN T_OBRACE $@1 • instructions T_CBRACE

    T_NEWLINE       shift, and go to state 99
    DIGIT           shift, and go to state 2
    IDENTIFIER      shift, and go to state 3
    STRING_LITERAL  shift, and go to state 4
    FLOAT_LITERAL   shift, and go to state 5
    T_OPAREN        shift, and go to state 6
    T_LET           shift, and go to state 7
    T_PRINT         shift, and go to state 8
    T_RETURN        shift, and go to state 9
    T_IF            shift, and go to state 10
    T_NOT           shift, and go to state 11
    T_MUT           shift, and go to state 15
    T_MINUS         shift, and go to state 16

    instructions  go to state 100
    instruction   go to state 101
    declaration   go to state 22
    expr          go to state 23


State 72

   26 declaration: T_MUT IDENTIFIER T_COLON • type T_ASSIGN expr

    T_INT     shift, and go to state 89
    T_FLOAT   shift, and go to state 90
    T_DOUBLE  shift, and go to state 91
    T_BOOL    shift, and go to state 92
    T_STRING  shift, and go to state 93

    type  go to state 102


State 73

   37 expr: expr • T_PLUS expr
   38     | expr • T_MINUS expr
   39     | expr • T_MUL expr
   40     | expr • T_DIV expr
   41     | expr • T_MOD expr
   42     | expr • T_POW expr
   43     | expr • T_GT expr
   44     | expr • T_LT expr
   45     | expr • T_GTE expr
   46     | expr • T_LTE expr
   47     | expr • T_EQ expr
   47     | expr T_EQ expr •
   48     | expr • T_NEQ expr
   49     | expr • T_AND expr
   50     | expr • T_OR expr

    T_PLUS   shift, and go to state 54
    T_MINUS  shift, and go to state 55
    T_MUL    shift, and go to state 56
    T_DIV    shift, and go to state 57
    T_MOD    shift, and go to state 58
    T_POW    shift, and go to state 59

    T_EQ   error (nonassociative)
    T_NEQ  error (nonassociative)
    T_GTE  error (nonassociative)
    T_LTE  error (nonassociative)
    T_GT   error (nonassociative)
    T_LT   error (nonassociative)

    $default  reduce using rule 47 (expr)


State 74

   37 expr: expr • T_PLUS expr
   38     | expr • T_MINUS expr
   39     | expr • T_MUL expr
   40     | expr • T_DIV expr
   41     | expr • T_MOD expr
   42     | expr • T_POW expr
   43     | expr • T_GT expr
   44     | expr • T_LT expr
   45     | expr • T_GTE expr
   46     | expr • T_LTE expr
   47     | expr • T_EQ expr
   48     | expr • T_NEQ expr
   48     | expr T_NEQ expr •
   49     | expr • T_AND expr
   50     | expr • T_OR expr

    T_PLUS   shift, and go to state 54
    T_MINUS  shift, and go to state 55
    T_MUL    shift, and go to state 56
    T_DIV    shift, and go to state 57
    T_MOD    shift, and go to state 58
    T_POW    shift, and go to state 59

    T_EQ   error (nonassociative)
    T_NEQ  error (nonassociative)
    T_GTE  error (nonassociative)
    T_LTE  error (nonassociative)
    T_GT   error (nonassociative)
    T_LT   error (nonassociative)

    $default  reduce using rule 48 (expr)


State 75

   37 expr: expr • T_PLUS expr
   38     | expr • T_MINUS expr
   39     | expr • T_MUL expr
   40     | expr • T_DIV expr
   41     | expr • T_MOD expr
   42     | expr • T_POW expr
   43     | expr • T_GT expr
   44     | expr • T_LT expr
   45     | expr • T_GTE expr
   45     | expr T_GTE expr •
   46     | expr • T_LTE expr
   47     | expr • T_EQ expr
   48     | expr • T_NEQ expr
   49     | expr • T_AND expr
   50     | expr • T_OR expr

    T_PLUS   shift, and go to state 54
    T_MINUS  shift, and go to state 55
    T_MUL    shift, and go to state 56
    T_DIV    shift, and go to state 57
    T_MOD    shift, and go to state 58
    T_POW    shift, and go to state 59

    T_EQ   error (nonassociative)
    T_NEQ  error (nonassociative)
    T_GTE  error (nonassociative)
    T_LTE  error (nonassociative)
    T_GT   error (nonassociative)
    T_LT   error (nonassociative)

    $default  reduce using rule 45 (expr)


State 76

   37 expr: expr • T_PLUS expr
   38     | expr • T_MINUS expr
   39     | expr • T_MUL expr
   40     | expr • T_DIV expr
   41     | expr • T_MOD expr
   42     | expr • T_POW expr
   43     | expr • T_GT expr
   44     | expr • T_LT expr
   45     | expr • T_GTE expr
   46     | expr • T_LTE expr
   46     | expr T_LTE expr •
   47     | expr • T_EQ expr
   48     | expr • T_NEQ expr
   49     | expr • T_AND expr
   50     | expr • T_OR expr

    T_PLUS   shift, and go to state 54
    T_MINUS  shift, and go to state 55
    T_MUL    shift, and go to state 56
    T_DIV    shift, and go to state 57
    T_MOD    shift, and go to state 58
    T_POW    shift, and go to state 59

    T_EQ   error (nonassociative)
    T_NEQ  error (nonassociative)
    T_GTE  error (nonassociative)
    T_LTE  error (nonassociative)
    T_GT   error (nonassociative)
    T_LT   error (nonassociative)

    $default  reduce using rule 46 (expr)


State 77

   37 expr: expr • T_PLUS expr
   38     | expr • T_MINUS expr
   39     | expr • T_MUL expr
   40     | expr • T_DIV expr
   41     | expr • T_MOD expr
   42     | expr • T_POW expr
   43     | expr • T_GT expr
   43     | expr T_GT expr •
   44     | expr • T_LT expr
   45     | expr • T_GTE expr
   46     | expr • T_LTE expr
   47     | expr • T_EQ expr
   48     | expr • T_NEQ expr
   49     | expr • T_AND expr
   50     | expr • T_OR expr

    T_PLUS   shift, and go to state 54
    T_MINUS  shift, and go to state 55
    T_MUL    shift, and go to state 56
    T_DIV    shift, and go to state 57
    T_MOD    shift, and go to state 58
    T_POW    shift, and go to state 59

    T_EQ   error (nonassociative)
    T_NEQ  error (nonassociative)
    T_GTE  error (nonassociative)
    T_LTE  error (nonassociative)
    T_GT   error (nonassociative)
    T_LT   error (nonassociative)

    $default  reduce using rule 43 (expr)


State 78

   37 expr: expr • T_PLUS expr
   38     | expr • T_MINUS expr
   39     | expr • T_MUL expr
   40     | expr • T_DIV expr
   41     | expr • T_MOD expr
   42     | expr • T_POW expr
   43     | expr • T_GT expr
   44     | expr • T_LT expr
   44     | expr T_LT expr •
   45     | expr • T_GTE expr
   46     | expr • T_LTE expr
   47     | expr • T_EQ expr
   48     | expr • T_NEQ expr
   49     | expr • T_AND expr
   50     | expr • T_OR expr

    T_PLUS   shift, and go to state 54
    T_MINUS  shift, and go to state 55
    T_MUL    shift, and go to state 56
    T_DIV    shift, and go to state 57
    T_MOD    shift, and go to state 58
    T_POW    shift, and go to state 59

    T_EQ   error (nonassociative)
    T_NEQ  error (nonassociative)
    T_GTE  error (nonassociative)
    T_LTE  error (nonassociative)
    T_GT   error (nonassociative)
    T_LT   error (nonassociative)

    $default  reduce using rule 44 (expr)


State 79

   37 expr: expr • T_PLUS expr
   38     | expr • T_MINUS expr
   39     | expr • T_MUL expr
   40     | expr • T_DIV expr
   41     | expr • T_MOD expr
   42     | expr • T_POW expr
   43     | expr • T_GT expr
   44     | expr • T_LT expr
   45     | expr • T_GTE expr
   46     | expr • T_LTE expr
   47     | expr • T_EQ expr
   48     | expr • T_NEQ expr
   49     | expr • T_AND expr
   49     | expr T_AND expr •
   50     | expr • T_OR expr

    T_EQ     shift, and go to state 45
    T_NEQ    shift, and go to state 47
    T_GTE    shift, and go to state 48
    T_LTE    shift, and go to state 49
    T_GT     shift, and go to state 50
    T_LT     shift, and go to state 51
    T_PLUS   shift, and go to state 54
    T_MINUS  shift, and go to state 55
    T_MUL    shift, and go to state 56
    T_DIV    shift, and go to state 57
    T_MOD    shift, and go to state 58
    T_POW    shift, and go to state 59

    $default  reduce using rule 49 (expr)


State 80

   37 expr: expr • T_PLUS expr
   38     | expr • T_MINUS expr
   39     | expr • T_MUL expr
   40     | expr • T_DIV expr
   41     | expr • T_MOD expr
   42     | expr • T_POW expr
   43     | expr • T_GT expr
   44     | expr • T_LT expr
   45     | expr • T_GTE expr
   46     | expr • T_LTE expr
   47     | expr • T_EQ expr
   48     | expr • T_NEQ expr
   49     | expr • T_AND expr
   50     | expr • T_OR expr
   50     | expr T_OR expr •

    T_EQ     shift, and go to state 45
    T_NEQ    shift, and go to state 47
    T_GTE    shift, and go to state 48
    T_LTE    shift, and go to state 49
    T_GT     shift, and go to state 50
    T_LT     shift, and go to state 51
    T_AND    shift, and go to state 52
    T_PLUS   shift, and go to state 54
    T_MINUS  shift, and go to state 55
    T_MUL    shift, and go to state 56
    T_DIV    shift, and go to state 57
    T_MOD    shift, and go to state 58
    T_POW    shift, and go to state 59

    $default  reduce using rule 50 (expr)


State 81

   37 expr: expr • T_PLUS expr
   37     | expr T_PLUS expr •
   38     | expr • T_MINUS expr
   39     | expr • T_MUL expr
   40     | expr • T_DIV expr
   41     | expr • T_MOD expr
   42     | expr • T_POW expr
   43     | expr • T_GT expr
   44     | expr • T_LT expr
   45     | expr • T_GTE expr
   46     | expr • T_LTE expr
   47     | expr • T_EQ expr
   48     | expr • T_NEQ expr
   49     | expr • T_AND expr
   50     | expr • T_OR expr

    T_MUL  shift, and go to state 56
    T_DIV  shift, and go to state 57
    T_MOD  shift, and go to state 58
    T_POW  shift, and go to state 59

    $default  reduce using rule 37 (expr)


State 82

   37 expr: expr • T_PLUS expr
   38     | expr • T_MINUS expr
   38     | expr T_MINUS expr •
   39     | expr • T_MUL expr
   40     | expr • T_DIV expr
   41     | expr • T_MOD expr
   42     | expr • T_POW expr
   43     | expr • T_GT expr
   44     | expr • T_LT expr
   45     | expr • T_GTE expr
   46     | expr • T_LTE expr
   47     | expr • T_EQ expr
   48     | expr • T_NEQ expr
   49     | expr • T_AND expr
   50     | expr • T_OR expr

    T_MUL  shift, and go to state 56
    T_DIV  shift, and go to state 57
    T_MOD  shift, and go to state 58
    T_POW  shift, and go to state 59

    $default  reduce using rule 38 (expr)


State 83

   37 expr: expr • T_PLUS expr
   38     | expr • T_MINUS expr
   39     | expr • T_MUL expr
   39     | expr T_MUL expr •
   40     | expr • T_DIV expr
   41     | expr • T_MOD expr
   42     | expr • T_POW expr
   43     | expr • T_GT expr
   44     | expr • T_LT expr
   45     | expr • T_GTE expr
   46     | expr • T_LTE expr
   47     | expr • T_EQ expr
   48     | expr • T_NEQ expr
   49     | expr • T_AND expr
   50     | expr • T_OR expr

    T_POW  shift, and go to state 59

    $default  reduce using rule 39 (expr)


State 84

   37 expr: expr • T_PLUS expr
   38     | expr • T_MINUS expr
   39     | expr • T_MUL expr
   40     | expr • T_DIV expr
   40     | expr T_DIV expr •
   41     | expr • T_MOD expr
   42     | expr • T_POW expr
   43     | expr • T_GT expr
   44     | expr • T_LT expr
   45     | expr • T_GTE expr
   46     | expr • T_LTE expr
   47     | expr • T_EQ expr
   48     | expr • T_NEQ expr
   49     | expr • T_AND expr
   50     | expr • T_OR expr

    T_POW  shift, and go to state 59

    $default  reduce using rule 40 (expr)


State 85

   37 expr: expr • T_PLUS expr
   38     | expr • T_MINUS expr
   39     | expr • T_MUL expr
   40     | expr • T_DIV expr
   41     | expr • T_MOD expr
   41     | expr T_MOD expr •
   42     | expr • T_POW expr
   43     | expr • T_GT expr
   44     | expr • T_LT expr
   45     | expr • T_GTE expr
   46     | expr • T_LTE expr
   47     | expr • T_EQ expr
   48     | expr • T_NEQ expr
   49     | expr • T_AND expr
   50     | expr • T_OR expr

    T_POW  shift, and go to state 59

    $default  reduce using rule 41 (expr)


State 86

   37 expr: expr • T_PLUS expr
   38     | expr • T_MINUS expr
   39     | expr • T_MUL expr
   40     | expr • T_DIV expr
   41     | expr • T_MOD expr
   42     | expr • T_POW expr
   42     | expr T_POW expr •
   43     | expr • T_GT expr
   44     | expr • T_LT expr
   45     | expr • T_GTE expr
   46     | expr • T_LTE expr
   47     | expr • T_EQ expr
   48     | expr • T_NEQ expr
   49     | expr • T_AND expr
   50     | expr • T_OR expr

    T_POW  shift, and go to state 59

    $default  reduce using rule 42 (expr)


State 87

   58 expr_list: expr T_COMMA • expr_list

    DIGIT           shift, and go to state 2
    IDENTIFIER      shift, and go to state 3
    STRING_LITERAL  shift, and go to state 4
    FLOAT_LITERAL   shift, and go to state 5
    T_OPAREN        shift, and go to state 6
    T_NOT           shift, and go to state 11
    T_MINUS         shift, and go to state 16

    $default  reduce using rule 56 (expr_list)

    expr       go to state 60
    expr_list  go to state 103


State 88

   36 expr: IDENTIFIER T_OPAREN expr_list T_CPAREN •

    $default  reduce using rule 36 (expr)


State 89

   27 type: T_INT •

    $default  reduce using rule 27 (type)


State 90

   28 type: T_FLOAT •

    $default  reduce using rule 28 (type)


State 91

   29 type: T_DOUBLE •

    $default  reduce using rule 29 (type)


State 92

   30 type: T_BOOL •

    $default  reduce using rule 30 (type)


State 93

   31 type: T_STRING •

    $default  reduce using rule 31 (type)


State 94

   25 declaration: T_LET IDENTIFIER T_COLON type • T_ASSIGN expr

    T_ASSIGN  shift, and go to state 104


State 95

   22 instruction: T_IF expr T_THEN T_OBRACE • $@2 instructions T_CBRACE opt_newlines T_ELSE T_OBRACE $@3 instructions T_CBRACE

    $default  reduce using rule 20 ($@2)

    $@2  go to state 105


State 96

   63 param: IDENTIFIER • T_COLON type

    T_COLON  shift, and go to state 106


State 97

   59 function_declaration: T_FUNC IDENTIFIER T_OPAREN param_list • T_CPAREN T_COLON type T_OBRACE function_body T_CBRACE

    T_CPAREN  shift, and go to state 107


State 98

   61 param_list: param •
   62           | param • T_COMMA param_list

    T_COMMA  shift, and go to state 108

    $default  reduce using rule 61 (param_list)


State 99

   15 instructions: T_NEWLINE • instructions

    T_NEWLINE       shift, and go to state 99
    DIGIT           shift, and go to state 2
    IDENTIFIER      shift, and go to state 3
    STRING_LITERAL  shift, and go to state 4
    FLOAT_LITERAL   shift, and go to state 5
    T_OPAREN        shift, and go to state 6
    T_LET           shift, and go to state 7
    T_PRINT         shift, and go to state 8
    T_RETURN        shift, and go to state 9
    T_IF            shift, and go to state 10
    T_NOT           shift, and go to state 11
    T_MUT           shift, and go to state 15
    T_MINUS         shift, and go to state 16

    instructions  go to state 109
    instruction   go to state 101
    declaration   go to state 22
    expr          go to state 23


State 100

    8 main_block: T_MAIN T_OBRACE $@1 instructions • T_CBRACE

    T_CBRACE  shift, and go to state 110


State 101

   13 instructions: instruction •
   14             | instruction • T_NEWLINE instructions

    T_NEWLINE  shift, and go to state 111

    $default  reduce using rule 13 (instructions)


State 102

   26 declaration: T_MUT IDENTIFIER T_COLON type • T_ASSIGN expr

    T_ASSIGN  shift, and go to state 112


State 103

   58 expr_list: expr T_COMMA expr_list •

    $default  reduce using rule 58 (expr_list)


State 104

   25 declaration: T_LET IDENTIFIER T_COLON type T_ASSIGN • expr

    DIGIT           shift, and go to state 2
    IDENTIFIER      shift, and go to state 3
    STRING_LITERAL  shift, and go to state 4
    FLOAT_LITERAL   shift, and go to state 5
    T_OPAREN        shift, and go to state 6
    T_NOT           shift, and go to state 11
    T_MINUS         shift, and go to state 16

    expr  go to state 113


State 105

   22 instruction: T_IF expr T_THEN T_OBRACE $@2 • instructions T_CBRACE opt_newlines T_ELSE T_OBRACE $@3 instructions T_CBRACE

    T_NEWLINE       shift, and go to state 99
    DIGIT           shift, and go to state 2
    IDENTIFIER      shift, and go to state 3
    STRING_LITERAL  shift, and go to state 4
    FLOAT_LITERAL   shift, and go to state 5
    T_OPAREN        shift, and go to state 6
    T_LET           shift, and go to state 7
    T_PRINT         shift, and go to state 8
    T_RETURN        shift, and go to state 9
    T_IF            shift, and go to state 10
    T_NOT           shift, and go to state 11
    T_MUT           shift, and go to state 15
    T_MINUS         shift, and go to state 16

    instructions  go to state 114
    instruction   go to state 101
    declaration   go to state 22
    expr          go to state 23


State 106

   63 param: IDENTIFIER T_COLON • type

    T_INT     shift, and go to state 89
    T_FLOAT   shift, and go to state 90
    T_DOUBLE  shift, and go to state 91
    T_BOOL    shift, and go to state 92
    T_STRING  shift, and go to state 93

    type  go to state 115


State 107

   59 function_declaration: T_FUNC IDENTIFIER T_OPAREN param_list T_CPAREN • T_COLON type T_OBRACE function_body T_CBRACE

    T_COLON  shift, and go to state 116


State 108

   62 param_list: param T_COMMA • param_list

    IDENTIFIER  shift, and go to state 96

    $default  reduce using rule 60 (param_list)

    param_list  go to state 117
    param       go to state 98


State 109

   15 instructions: T_NEWLINE instructions •

    $default  reduce using rule 15 (instructions)


State 110

    8 main_block: T_MAIN T_OBRACE $@1 instructions T_CBRACE •

    $default  reduce using rule 8 (main_block)


State 111

   14 instructions: instruction T_NEWLINE • instructions

    T_NEWLINE       shift, and go to state 99
    DIGIT           shift, and go to state 2
    IDENTIFIER      shift, and go to state 3
    STRING_LITERAL  shift, and go to state 4
    FLOAT_LITERAL   shift, and go to state 5
    T_OPAREN        shift, and go to state 6
    T_LET           shift, and go to state 7
    T_PRINT         shift, and go to state 8
    T_RETURN        shift, and go to state 9
    T_IF            shift, and go to state 10
    T_NOT           shift, and go to state 11
    T_MUT           shift, and go to state 15
    T_MINUS         shift, and go to state 16

    instructions  go to state 118
    instruction   go to state 101
    declaration   go to state 22
    expr          go to state 23


State 112

   26 declaration: T_MUT IDENTIFIER T_COLON type T_ASSIGN • expr

    DIGIT           shift, and go to state 2
    IDENTIFIER      shift, and go to state 3
    STRING_LITERAL  shift, and go to state 4
    FLOAT_LITERAL   shift, and go to state 5
    T_OPAREN        shift, and go to state 6
    T_NOT           shift, and go to state 11
    T_MINUS         shift, and go to state 16

    expr  go to state 119


State 113

   25 declaration: T_LET IDENTIFIER T_COLON type T_ASSIGN expr •
   37 expr: expr • T_PLUS expr
   38     | expr • T_MINUS expr
   39     | expr • T_MUL expr
   40     | expr • T_DIV expr
   41     | expr • T_MOD expr
   42     | expr • T_POW expr
   43     | expr • T_GT expr
   44     | expr • T_LT expr
   45     | expr • T_GTE expr
   46     | expr • T_LTE expr
   47     | expr • T_EQ expr
   48     | expr • T_NEQ expr
   49     | expr • T_AND expr
   50     | expr • T_OR expr

    T_EQ     shift, and go to state 45
    T_NEQ    shift, and go to state 47
    T_GTE    shift, and go to state 48
    T_LTE    shift, and go to state 49
    T_GT     shift, and go to state 50
    T_LT     shift, and go to state 51
    T_AND    shift, and go to state 52
    T_OR     shift, and go to state 53
    T_PLUS   shift, and go to state 54
    T_MINUS  shift, and go to state 55
    T_MUL    shift, and go to state 56
    T_DIV    shift, and go to state 57
    T_MOD    shift, and go to state 58
    T_POW    shift, and go to state 59

    $default  reduce using rule 25 (declaration)


State 114

   22 instruction: T_IF expr T_THEN T_OBRACE $@2 instructions • T_CBRACE opt_newlines T_ELSE T_OBRACE $@3 instructions T_CBRACE

    T_CBRACE  shift, and go to state 120


State 115

   63 param: IDENTIFIER T_COLON type •

    $default  reduce using rule 63 (param)


State 116

   59 function_declaration: T_FUNC IDENTIFIER T_OPAREN param_list T_CPAREN T_COLON • type T_OBRACE function_body T_CBRACE

    T_INT     shift, and go to state 89
    T_FLOAT   shift, and go to state 90
    T_DOUBLE  shift, and go to state 91
    T_BOOL    shift, and go to state 92
    T_STRING  shift, and go to state 93

    type  go to state 121


State 117

   62 param_list: param T_COMMA param_list •

    $default  reduce using rule 62 (param_list)


State 118

   14 instructions: instruction T_NEWLINE instructions •

    $default  reduce using rule 14 (instructions)


State 119

   26 declaration: T_MUT IDENTIFIER T_COLON type T_ASSIGN expr •
   37 expr: expr • T_PLUS expr
   38     | expr • T_MINUS expr
   39     | expr • T_MUL expr
   40     | expr • T_DIV expr
   41     | expr • T_MOD expr
   42     | expr • T_POW expr
   43     | expr • T_GT expr
   44     | expr • T_LT expr
   45     | expr • T_GTE expr
   46     | expr • T_LTE expr
   47     | expr • T_EQ expr
   48     | expr • T_NEQ expr
   49     | expr • T_AND expr
   50     | expr • T_OR expr

    T_EQ     shift, and go to state 45
    T_NEQ    shift, and go to state 47
    T_GTE    shift, and go to state 48
    T_LTE    shift, and go to state 49
    T_GT     shift, and go to state 50
    T_LT     shift, and go to state 51
    T_AND    shift, and go to state 52
    T_OR     shift, and go to state 53
    T_PLUS   shift, and go to state 54
    T_MINUS  shift, and go to state 55
    T_MUL    shift, and go to state 56
    T_DIV    shift, and go to state 57
    T_MOD    shift, and go to state 58
    T_POW    shift, and go to state 59

    $default  reduce using rule 26 (declaration)


State 120

   22 instruction: T_IF expr T_THEN T_OBRACE $@2 instructions T_CBRACE • opt_newlines T_ELSE T_OBRACE $@3 instructions T_CBRACE

    T_NEWLINE  shift, and go to state 122

    $default  reduce using rule 23 (opt_newlines)

    opt_newlines  go to state 123


State 121

   59 function_declaration: T_FUNC IDENTIFIER T_OPAREN param_list T_CPAREN T_COLON type • T_OBRACE function_body T_CBRACE

    T_OBRACE  shift, and go to state 124


State 122

   24 opt_newlines: T_NEWLINE • opt_newlines

    T_NEWLINE  shift, and go to state 122

    $default  reduce using rule 23 (opt_newlines)

    opt_newlines  go to state 125


State 123

   22 instruction: T_IF expr T_THEN T_OBRACE $@2 instructions T_CBRACE opt_newlines • T_ELSE T_OBRACE $@3 instructions T_CBRACE

    T_ELSE  shift, and go to state 126


State 124

   59 function_declaration: T_FUNC IDENTIFIER T_OPAREN param_list T_CPAREN T_COLON type T_OBRACE • function_body T_CBRACE

    T_NEWLINE       shift, and go to state 99
    DIGIT           shift, and go to state 2
    IDENTIFIER      shift, and go to state 3
    STRING_LITERAL  shift, and go to state 4
    FLOAT_LITERAL   shift, and go to state 5
    T_OPAREN        shift, and go to state 6
    T_LET           shift, and go to state 7
    T_PRINT         shift, and go to state 8
    T_RETURN        shift, and go to state 9
    T_IF            shift, and go to state 10
    T_NOT           shift, and go to state 11
    T_MUT           shift, and go to state 15
    T_MINUS         shift, and go to state 16

    instructions   go to state 127
    instruction    go to state 101
    declaration    go to state 22
    expr           go to state 23
    function_body  go to state 128


State 125

   24 opt_newlines: T_NEWLINE opt_newlines •

    $default  reduce using rule 24 (opt_newlines)


State 126

   22 instruction: T_IF expr T_THEN T_OBRACE $@2 instructions T_CBRACE opt_newlines T_ELSE • T_OBRACE $@3 instructions T_CBRACE

    T_OBRACE  shift, and go to state 129


State 127

   64 function_body: instructions •

    $default  reduce using rule 64 (function_body)


State 128

   59 function_declaration: T_FUNC IDENTIFIER T_OPAREN param_list T_CPAREN T_COLON type T_OBRACE function_body • T_CBRACE

    T_CBRACE  shift, and go to state 130


State 129

   22 instruction: T_IF expr T_THEN T_OBRACE $@2 instructions T_CBRACE opt_newlines T_ELSE T_OBRACE • $@3 instructions T_CBRACE

    $default  reduce using rule 21 ($@3)

    $@3  go to state 131


State 130

   59 function_declaration: T_FUNC IDENTIFIER T_OPAREN param_list T_CPAREN T_COLON type T_OBRACE function_body T_CBRACE •

    $default  reduce using rule 59 (function_declaration)


State 131

   22 instruction: T_IF expr T_THEN T_OBRACE $@2 instructions T_CBRACE opt_newlines T_ELSE T_OBRACE $@3 • instructions T_CBRACE

    T_NEWLINE       shift, and go to state 99
    DIGIT           shift, and go to state 2
    IDENTIFIER      shift, and go to state 3
    STRING_LITERAL  shift, and go to state 4
    FLOAT_LITERAL   shift, and go to state 5
    T_OPAREN        shift, and go to state 6
    T_LET           shift, and go to state 7
    T_PRINT         shift, and go to state 8
    T_RETURN        shift, and go to state 9
    T_IF            shift, and go to state 10
    T_NOT           shift, and go to state 11
    T_MUT           shift, and go to state 15
    T_MINUS         shift, and go to state 16

    instructions  go to state 132
    instruction   go to state 101
    declaration   go to state 22
    expr          go to state 23


State 132

   22 instruction: T_IF expr T_THEN T_OBRACE $@2 instructions T_CBRACE opt_newlines T_ELSE T_OBRACE $@3 instructions • T_CBRACE

    T_CBRACE  shift, and go to state 133


State 133

   22 instruction: T_IF expr T_THEN T_OBRACE $@2 instructions T_CBRACE opt_newlines T_ELSE T_OBRACE $@3 instructions T_CBRACE •

    $default  reduce using rule 22 (instruction)
